
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;

    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    //adding all necessary data for the two student combo boxes
    public void rebuildstudentNameComboboxes(){      
        ArrayList<StudentEntry> student = StudentQueries.getAllStudents();
        selectStudentCombobox.removeAllItems();
        displayStudentSelectStudentCombobox.removeAllItems();
        studentDropCourseSelectStudentComboBox.removeAllItems();
        dropStudentComboBox.removeAllItems();
        for(StudentEntry newstudent : student){
            selectStudentCombobox.addItem(newstudent.getLastName() + "," + newstudent.getFirstName());
            displayStudentSelectStudentCombobox.addItem(newstudent.getLastName() + "," + newstudent.getFirstName());
            studentDropCourseSelectStudentComboBox.addItem(newstudent.getLastName() + "," + newstudent.getFirstName());
            dropStudentComboBox.addItem(newstudent.getLastName() + "," + newstudent.getFirstName());
            
        }
    }
    //adding data to course combo box
    public void rebuildselectCourseCombobox(){
        ArrayList<String> course = CourseQueries.getAllCourseCodes(currentSemester);
        selectCourseCombobox.setModel(new javax.swing.DefaultComboBoxModel(course.toArray()));
        displayCourseListStudentsSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(course.toArray()));
        studentDropCourseSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(course.toArray()));
        adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(course.toArray()));
      }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        adminTabs = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        semesterNameLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        courseCodeLabel = new javax.swing.JLabel();
        courseCodeTextfield = new javax.swing.JTextField();
        courseDescriptionLabel = new javax.swing.JLabel();
        courseDescriptionTextfield = new javax.swing.JTextField();
        courseSeatsLabel = new javax.swing.JLabel();
        addCourseButton = new javax.swing.JButton();
        addCourseLabel = new javax.swing.JLabel();
        courseSeatsSpinner = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        studentIDLabel = new javax.swing.JLabel();
        studentIDTextfield = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextfield = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextfield = new javax.swing.JTextField();
        addStudentButton = new javax.swing.JButton();
        addStudentLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        displayCourseListStudentsSelectCourseLabel = new javax.swing.JLabel();
        displayCourseListStudentsSelectCourseComboBox = new javax.swing.JComboBox<>();
        displayCourseListStudentsButton = new javax.swing.JButton();
        displayCourseListStudentsScheduledStduentsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayCourseListStudentsScheduledStudentsTable = new javax.swing.JTable();
        displayCourseListStudentsWaitlistedStudentsLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        displayCourseListStudentsWaitlistedStudentsTable = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        dropStudentSelectStudentLabel = new javax.swing.JLabel();
        dropStudentComboBox = new javax.swing.JComboBox<>();
        dropStudentButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        adminDropCourseSelectLabel = new javax.swing.JLabel();
        adminDropCourseComboBox = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        adminDropCourseTextArea = new javax.swing.JTextArea();
        adminDropCourseButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        studentTabs = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        displayCoursesButton = new javax.swing.JButton();
        scheduleCoursePanel = new javax.swing.JPanel();
        selectCourseLabel = new javax.swing.JLabel();
        selectCourseCombobox = new javax.swing.JComboBox<>();
        scheduleCourseSelectStudentLabel = new javax.swing.JLabel();
        selectStudentCombobox = new javax.swing.JComboBox<>();
        scheduleCourseSubmitButton = new javax.swing.JButton();
        scheduleCourseLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        displayStudentSelectStudentLabel = new javax.swing.JLabel();
        displayStudentSelectStudentCombobox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayStudentTable = new javax.swing.JTable();
        displayStudentButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        studentDropCourseSelectStudentLabel = new javax.swing.JLabel();
        studentDropCourseSelectStudentComboBox = new javax.swing.JComboBox<>();
        studentDropCourseSelectCourseLabel = new javax.swing.JLabel();
        studentDropCourseSelectCourseComboBox = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        studentDropCourseTextArea = new javax.swing.JTextArea();
        studentDropCourseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        semesterNameLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(semesterNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semesterNameLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Semester", jPanel3);

        courseCodeLabel.setText("Course Code:");

        courseCodeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseCodeTextfieldActionPerformed(evt);
            }
        });

        courseDescriptionLabel.setText("Course Description: ");

        courseDescriptionTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseDescriptionTextfieldActionPerformed(evt);
            }
        });

        courseSeatsLabel.setText("Course Seats: ");

        addCourseButton.setText("Submit");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseDescriptionLabel)
                            .addComponent(courseCodeLabel)
                            .addComponent(courseSeatsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(courseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseDescriptionTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(addCourseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(courseSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(addCourseButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCodeLabel)
                    .addComponent(courseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseDescriptionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseSeatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(addCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCourseLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Course", jPanel4);

        studentIDLabel.setText("Student ID: ");

        studentIDTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDTextfieldActionPerformed(evt);
            }
        });

        firstNameLabel.setText("First Name: ");

        firstNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextfieldActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last Name: ");

        lastNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextfieldActionPerformed(evt);
            }
        });

        addStudentButton.setText("Submit");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        addStudentLabel.setText(" ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(addStudentButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE))
                            .addComponent(lastNameTextfield)))
                    .addComponent(addStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel)
                            .addComponent(studentIDLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameTextfield)
                            .addComponent(studentIDTextfield))))
                .addGap(494, 494, 494))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIDLabel)
                    .addComponent(studentIDTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(addStudentButton)
                .addGap(18, 18, 18)
                .addComponent(addStudentLabel)
                .addContainerGap(313, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Student", jPanel5);

        displayCourseListStudentsSelectCourseLabel.setText("Select Course: ");

        displayCourseListStudentsSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayCourseListStudentsButton.setText("Display");
        displayCourseListStudentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseListStudentsButtonActionPerformed(evt);
            }
        });

        displayCourseListStudentsScheduledStduentsLabel.setText("Scheduled Students");

        displayCourseListStudentsScheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name ", "First Name", "Student ID "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(displayCourseListStudentsScheduledStudentsTable);

        displayCourseListStudentsWaitlistedStudentsLabel.setText("Waitlisted Students");

        displayCourseListStudentsWaitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(displayCourseListStudentsWaitlistedStudentsTable);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(displayCourseListStudentsSelectCourseLabel)
                        .addGap(18, 18, 18)
                        .addComponent(displayCourseListStudentsSelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayCourseListStudentsButton))
                    .addComponent(displayCourseListStudentsScheduledStduentsLabel))
                .addGap(1, 1, 1)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(displayCourseListStudentsWaitlistedStudentsLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayCourseListStudentsSelectCourseLabel)
                    .addComponent(displayCourseListStudentsSelectCourseComboBox)
                    .addComponent(displayCourseListStudentsButton))
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayCourseListStudentsScheduledStduentsLabel)
                    .addComponent(displayCourseListStudentsWaitlistedStudentsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        adminTabs.addTab("Display Course List of Students", jPanel8);

        dropStudentSelectStudentLabel.setText("Select Student: ");

        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentButton.setText("Drop Student");
        dropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentButtonActionPerformed(evt);
            }
        });

        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane6.setViewportView(dropStudentTextArea);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(dropStudentSelectStudentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropStudentComboBox, 0, 144, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(dropStudentButton)
                .addGap(593, 593, 593))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropStudentSelectStudentLabel)
                    .addComponent(dropStudentComboBox)
                    .addComponent(dropStudentButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
        );

        adminTabs.addTab("Drop Student", jPanel10);

        adminDropCourseSelectLabel.setText("Select Course to be Dropped: ");

        adminDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        adminDropCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropCourseComboBoxActionPerformed(evt);
            }
        });

        adminDropCourseTextArea.setColumns(20);
        adminDropCourseTextArea.setRows(5);
        jScrollPane7.setViewportView(adminDropCourseTextArea);

        adminDropCourseButton.setText("Drop Course");
        adminDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(adminDropCourseSelectLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adminDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adminDropCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(510, 510, 510))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(364, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDropCourseSelectLabel)
                    .addComponent(adminDropCourseComboBox)
                    .addComponent(adminDropCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
        );

        adminTabs.addTab("Drop Course", jPanel11);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminTabs)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminTabs)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code ", "Description", "Seats "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(displayCoursesTable);

        displayCoursesButton.setText("Display");
        displayCoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCoursesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 924, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(displayCoursesButton)
                .addGap(431, 431, 431))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(displayCoursesButton)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        studentTabs.addTab("Display Courses", jPanel7);

        selectCourseLabel.setText("Select Course: ");

        selectCourseCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectCourseCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCourseComboboxActionPerformed(evt);
            }
        });

        scheduleCourseSelectStudentLabel.setText("Select Student: ");

        selectStudentCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleCourseSubmitButton.setText("Submit");
        scheduleCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleCourseSubmitButtonActionPerformed(evt);
            }
        });

        scheduleCourseLabel.setText(" ");

        javax.swing.GroupLayout scheduleCoursePanelLayout = new javax.swing.GroupLayout(scheduleCoursePanel);
        scheduleCoursePanel.setLayout(scheduleCoursePanelLayout);
        scheduleCoursePanelLayout.setHorizontalGroup(
            scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectCourseLabel)
                    .addComponent(scheduleCourseSelectStudentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scheduleCourseSubmitButton)
                    .addComponent(scheduleCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(scheduleCoursePanelLayout.createSequentialGroup()
                        .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectCourseCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectStudentCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(325, 325, 325)))
                .addGap(253, 253, 253))
        );
        scheduleCoursePanelLayout.setVerticalGroup(
            scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectCourseLabel)
                    .addComponent(selectCourseCombobox))
                .addGap(18, 18, 18)
                .addGroup(scheduleCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleCourseSelectStudentLabel)
                    .addComponent(selectStudentCombobox))
                .addGap(18, 18, 18)
                .addComponent(scheduleCourseSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(scheduleCourseLabel)
                .addGap(122, 122, 122))
        );

        studentTabs.addTab("Schedule Course", scheduleCoursePanel);

        displayStudentSelectStudentLabel.setText("Select Student: ");

        displayStudentSelectStudentCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayStudentSelectStudentCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentSelectStudentComboboxActionPerformed(evt);
            }
        });

        displayStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayStudentTable);

        displayStudentButton.setText("Display");
        displayStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(displayStudentSelectStudentLabel)
                .addGap(18, 18, 18)
                .addComponent(displayStudentSelectStudentCombobox, 0, 249, Short.MAX_VALUE)
                .addGap(578, 578, 578))
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(displayStudentButton)
                .addGap(437, 437, 437))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayStudentSelectStudentLabel)
                    .addComponent(displayStudentSelectStudentCombobox))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(displayStudentButton)
                .addGap(41, 41, 41))
        );

        studentTabs.addTab("Display Student", jPanel9);

        studentDropCourseSelectStudentLabel.setText("Select Student: ");

        studentDropCourseSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        studentDropCourseSelectStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropCourseSelectStudentComboBoxActionPerformed(evt);
            }
        });

        studentDropCourseSelectCourseLabel.setText("Select Course: ");

        studentDropCourseSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentDropCourseTextArea.setColumns(20);
        studentDropCourseTextArea.setRows(5);
        jScrollPane8.setViewportView(studentDropCourseTextArea);

        studentDropCourseButton.setText("Drop Course");
        studentDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                            .addComponent(studentDropCourseSelectCourseLabel)
                            .addGap(18, 18, 18)
                            .addComponent(studentDropCourseSelectCourseComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                            .addComponent(studentDropCourseSelectStudentLabel)
                            .addGap(18, 18, 18)
                            .addComponent(studentDropCourseSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(559, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(studentDropCourseButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentDropCourseSelectStudentLabel)
                    .addComponent(studentDropCourseSelectStudentComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentDropCourseSelectCourseLabel)
                    .addComponent(studentDropCourseSelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(studentDropCourseButton)
                .addGap(17, 17, 17))
        );

        studentTabs.addTab("Drop Course", jPanel12);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentTabs))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(studentTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSemesterComboBoxActionPerformed(evt);
            }
        });

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //add semester to semester combo box and database
    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        currentSemester = semester; 
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void courseCodeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseCodeTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseCodeTextfieldActionPerformed

    private void courseDescriptionTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseDescriptionTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseDescriptionTextfieldActionPerformed
    //adding courses to database and course combo box
    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        // TODO add your handling code here:
        String courseCode = courseCodeTextfield.getText();
        String description = courseDescriptionTextfield.getText();
        int seats = (Integer) courseSeatsSpinner.getValue();
        CourseEntry courseEntry = new CourseEntry(currentSemester, courseCode, description, seats);
        CourseQueries.addCourse(courseEntry);
        addCourseLabel.setText(courseCode + " has been added.");
        rebuildselectCourseCombobox();
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void currentSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentSemesterComboBoxActionPerformed

    private void firstNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextfieldActionPerformed

    private void studentIDTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDTextfieldActionPerformed

    private void displayStudentSelectStudentComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentSelectStudentComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayStudentSelectStudentComboboxActionPerformed
    //adding students to combo boxes and database 
    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:
        String studentID = studentIDTextfield.getText();
        String firstName = firstNameTextfield.getText();
        String lastName = lastNameTextfield.getText();
        StudentEntry student = new StudentEntry(studentID, firstName, lastName);
        StudentQueries.addStudent(student);
        addStudentLabel.setText(lastName + "," + firstName + " has been added.");
        rebuildstudentNameComboboxes();
    }//GEN-LAST:event_addStudentButtonActionPerformed
    //adding courses available to display courses tabel
    private void displayCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCoursesButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayTable = (DefaultTableModel)displayCoursesTable.getModel();
        
        displayTable.setNumRows(0); 
        Object[] rowData = new Object[3];
        for (CourseEntry course:courses){
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayTable.addRow(rowData);
        }
    }//GEN-LAST:event_displayCoursesButtonActionPerformed

    private void displayStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> studentInfo = StudentQueries.getAllStudents();
        String selectedStudent = studentInfo.get(displayStudentSelectStudentCombobox.getSelectedIndex()).getStudentID(); 
        ArrayList<ScheduleEntry> scheduleInfo = ScheduleQueries.getScheduleByStudent(currentSemester, selectedStudent);
        DefaultTableModel scheduleTable = (DefaultTableModel)displayStudentTable.getModel();
        
        scheduleTable.setNumRows(0); 
        Object[] rowData = new Object[2];
        for (ScheduleEntry course:scheduleInfo){
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getStatus(); 
            scheduleTable.addRow(rowData);
        }
    }//GEN-LAST:event_displayStudentButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        String currentSemesterSelected = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(currentSemesterSelected);
        currentSemester = currentSemesterSelected;
        rebuildselectCourseCombobox();
        rebuildstudentNameComboboxes();
        
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    //adding a student's needed course to database and determines if the class is full and student is waitlisted if it is 
    private void scheduleCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleCourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String selectedCourse = selectCourseCombobox.getSelectedItem().toString();
        String selectedStudent = selectStudentCombobox.getSelectedItem().toString();
        String studentID = students.get(selectStudentCombobox.getSelectedIndex()).getStudentID();
        java.sql.Timestamp currentTime = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        String status = "S";
        //checks if there is enough seats for student to enroll; waitlist if not
        if (CourseQueries.getCourseSeats(currentSemester, selectedCourse) <= ScheduleQueries.getScheduleStudentCount(currentSemester, selectedCourse)){
            status = "W";
        }
        ScheduleEntry newSchedule = new ScheduleEntry(currentSemester, selectedCourse, studentID, status, currentTime);
        ScheduleQueries.addScheduleEntry(newSchedule);
        
        if (status == "S") {
            scheduleCourseLabel.setText(selectedStudent  + " has been scheduled for " + selectedCourse + ".");
        }
        else{
            scheduleCourseLabel.setText(selectedStudent  + " has been waitlisted for " + selectedCourse + ".");
        }
    }//GEN-LAST:event_scheduleCourseSubmitButtonActionPerformed

    private void selectCourseComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCourseComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectCourseComboboxActionPerformed

    private void lastNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextfieldActionPerformed

    private void displayCourseListStudentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseListStudentsButtonActionPerformed
        // TODO add your handling code here:
        String selectedCourse = displayCourseListStudentsSelectCourseComboBox.getSelectedItem().toString();
        
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, selectedCourse);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, selectedCourse);
        
        ArrayList<StudentEntry> allSchedulesStudents = new ArrayList<StudentEntry>();   
        for (ScheduleEntry allStudents:scheduled){ 
            allSchedulesStudents.add(StudentQueries.getStudent(allStudents.getStudentID())); 
        }
        
        ArrayList<StudentEntry> allWaitlistedStudents = new ArrayList<StudentEntry>();   
        for (ScheduleEntry allStudents2:waitlisted){ 
            allWaitlistedStudents.add(StudentQueries.getStudent(allStudents2.getStudentID())); 
        }
        
        DefaultTableModel displayTable = (DefaultTableModel)displayCourseListStudentsScheduledStudentsTable.getModel();
        DefaultTableModel displayTable2 = (DefaultTableModel)displayCourseListStudentsWaitlistedStudentsTable.getModel();
        
        
        displayTable.setNumRows(0); 
        Object[] rowData = new Object[3];
        for (StudentEntry student:allSchedulesStudents){
            rowData[0] = student.getLastName(); 
            rowData[1] = student.getFirstName(); 
            rowData[2] = student.getStudentID();
            displayTable.addRow(rowData);
        }  
        displayTable2.setNumRows(0);    
        Object[] rowData2 = new Object[3];
        for (StudentEntry student2:allWaitlistedStudents){
            rowData2[0] = student2.getLastName();
            rowData2[1] = student2.getFirstName();
            rowData2[2] = student2.getStudentID();
            displayTable2.addRow(rowData2);
        }
    }//GEN-LAST:event_displayCourseListStudentsButtonActionPerformed

    private void dropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentButtonActionPerformed
        // TODO add your handling code here:
        dropStudentTextArea.setText("");
        String selectedStudentName = dropStudentComboBox.getSelectedItem().toString();
        ArrayList<String> allSemesters = SemesterQueries.getSemesterList(); 
        
        ArrayList<StudentEntry> studentInfo = StudentQueries.getAllStudents();
        String selectedStudentID = studentInfo.get(dropStudentComboBox.getSelectedIndex()).getStudentID();
        
        dropStudentTextArea.append(selectedStudentName + " " + selectedStudentID + " has been dropped from the list of students.");
        
        for (String semester:allSemesters){
            dropStudentTextArea.append("\n\n" + "For Semester " + semester);
            ArrayList<ScheduleEntry> studentScheduleInfo = ScheduleQueries.getScheduleByStudent(semester, selectedStudentID);
            for (ScheduleEntry classes:studentScheduleInfo){
                ScheduleQueries.dropStudentScheduleByCourse(semester, selectedStudentID, classes.getCourseCode());
                
                if (classes.getStatus().equals("W")){
                    dropStudentTextArea.append("\n" + selectedStudentName + " " + selectedStudentID + " has been dropped from the waitlist for " + classes.getCourseCode());
                }
                else{
                dropStudentTextArea.append("\n" + selectedStudentName + " " + selectedStudentID + " has been dropped from " + classes.getCourseCode());
                }
                
                ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(semester, classes.getCourseCode());
                if ((waitlistedStudents.size()) > 0 && classes.getStatus().equals("S")){
                    String newStudent = (waitlistedStudents.get(0)).getStudentID();
                    StudentEntry studentName = StudentQueries.getStudent(newStudent); 
                    dropStudentTextArea.append('\n' + studentName.getLastName() + "," + studentName.getFirstName() + " " + newStudent + " has been scheduled to " + classes.getCourseCode());
                    java.sql.Timestamp currentTime = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
                    ScheduleEntry newSchedule = new ScheduleEntry(semester, newStudent, classes.getCourseCode(), "S", currentTime);
                    ScheduleQueries.updateScheduleEntry(semester, newSchedule);
                }
                
            }
      
        }
        StudentQueries.dropStudent(selectedStudentID);
        rebuildstudentNameComboboxes();
        
    }//GEN-LAST:event_dropStudentButtonActionPerformed

    private void adminDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropCourseButtonActionPerformed
        // TODO add your handling code here:
        String droppedCourse = adminDropCourseComboBox.getSelectedItem().toString();
        
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, droppedCourse);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, droppedCourse);
        
        ArrayList<StudentEntry> allSchedulesStudents = new ArrayList<StudentEntry>();   
        for (ScheduleEntry allStudents:scheduled){ 
            allSchedulesStudents.add(StudentQueries.getStudent(allStudents.getStudentID())); 
        }
        
        ArrayList<StudentEntry> allWaitlistedStudents = new ArrayList<StudentEntry>();   
        for (ScheduleEntry allStudents2:waitlisted){ 
            allWaitlistedStudents.add(StudentQueries.getStudent(allStudents2.getStudentID())); 
        }
        adminDropCourseTextArea.setText("");
        adminDropCourseTextArea.append("Scheduled students droppped from the course:" + "\n"); 
        for (StudentEntry student:allSchedulesStudents){
            adminDropCourseTextArea.append(student.getLastName() + ", " + student.getFirstName() + " "+ student.getStudentID() + "\n"); 
        }
        adminDropCourseTextArea.append("\n\n" + "Waitlisted students droppped from the course:" + "\n");
        for (StudentEntry student2:allWaitlistedStudents){
            adminDropCourseTextArea.append(student2.getLastName() + "," + student2.getFirstName() + " " + student2.getStudentID() + "\n");
        
        }
        CourseQueries.dropCourse(currentSemester, droppedCourse); 
        rebuildselectCourseCombobox();
    }//GEN-LAST:event_adminDropCourseButtonActionPerformed

    private void studentDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropCourseButtonActionPerformed
        // TODO add your handling code here:
        studentDropCourseTextArea.setText("");
        String selectedCourse = studentDropCourseSelectCourseComboBox.getSelectedItem().toString();
        
        ArrayList<StudentEntry> studentInfo = StudentQueries.getAllStudents();
        String selectedStudentID = studentInfo.get(studentDropCourseSelectStudentComboBox.getSelectedIndex()).getStudentID();
        
        String selectedStudentName = studentDropCourseSelectStudentComboBox.getSelectedItem().toString();
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, selectedStudentID, selectedCourse); 
        studentDropCourseTextArea.append(selectedStudentName + " " + selectedStudentID + " has been dropped from " + selectedCourse);
         
        ArrayList<ScheduleEntry> waitlistedStudents = ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, selectedCourse);
        if ((waitlistedStudents.size()) > 0){
            String newStudent = (waitlistedStudents.get(0)).getStudentID();
            StudentEntry studentName = StudentQueries.getStudent(newStudent); 
            studentDropCourseTextArea.append('\n' + studentName.getLastName() + "," + studentName.getFirstName() + " has been scheduled to " + selectedCourse);
            java.sql.Timestamp currentTime = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
            ScheduleEntry newSchedule = new ScheduleEntry(currentSemester, newStudent, selectedCourse, "S", currentTime);
            ScheduleQueries.updateScheduleEntry(currentSemester, newSchedule);
        }
        rebuildstudentNameComboboxes();
       
        
    }//GEN-LAST:event_studentDropCourseButtonActionPerformed

    private void studentDropCourseSelectStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropCourseSelectStudentComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentDropCourseSelectStudentComboBoxActionPerformed

    private void adminDropCourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropCourseComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminDropCourseComboBoxActionPerformed
        
    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JButton addCourseButton;
    private javax.swing.JLabel addCourseLabel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JLabel addStudentLabel;
    private javax.swing.JButton adminDropCourseButton;
    private javax.swing.JComboBox<String> adminDropCourseComboBox;
    private javax.swing.JLabel adminDropCourseSelectLabel;
    private javax.swing.JTextArea adminDropCourseTextArea;
    private javax.swing.JTabbedPane adminTabs;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JTextField courseCodeTextfield;
    private javax.swing.JLabel courseDescriptionLabel;
    private javax.swing.JTextField courseDescriptionTextfield;
    private javax.swing.JLabel courseSeatsLabel;
    private javax.swing.JSpinner courseSeatsSpinner;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayCourseListStudentsButton;
    private javax.swing.JLabel displayCourseListStudentsScheduledStduentsLabel;
    private javax.swing.JTable displayCourseListStudentsScheduledStudentsTable;
    private javax.swing.JComboBox<String> displayCourseListStudentsSelectCourseComboBox;
    private javax.swing.JLabel displayCourseListStudentsSelectCourseLabel;
    private javax.swing.JLabel displayCourseListStudentsWaitlistedStudentsLabel;
    private javax.swing.JTable displayCourseListStudentsWaitlistedStudentsTable;
    private javax.swing.JButton displayCoursesButton;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JButton displayStudentButton;
    private javax.swing.JComboBox<String> displayStudentSelectStudentCombobox;
    private javax.swing.JLabel displayStudentSelectStudentLabel;
    private javax.swing.JTable displayStudentTable;
    private javax.swing.JButton dropStudentButton;
    private javax.swing.JComboBox<String> dropStudentComboBox;
    private javax.swing.JLabel dropStudentSelectStudentLabel;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextfield;
    private javax.swing.JLabel scheduleCourseLabel;
    private javax.swing.JPanel scheduleCoursePanel;
    private javax.swing.JLabel scheduleCourseSelectStudentLabel;
    private javax.swing.JButton scheduleCourseSubmitButton;
    private javax.swing.JComboBox<String> selectCourseCombobox;
    private javax.swing.JLabel selectCourseLabel;
    private javax.swing.JComboBox<String> selectStudentCombobox;
    private javax.swing.JLabel semesterNameLabel;
    private javax.swing.JButton studentDropCourseButton;
    private javax.swing.JComboBox<String> studentDropCourseSelectCourseComboBox;
    private javax.swing.JLabel studentDropCourseSelectCourseLabel;
    private javax.swing.JComboBox<String> studentDropCourseSelectStudentComboBox;
    private javax.swing.JLabel studentDropCourseSelectStudentLabel;
    private javax.swing.JTextArea studentDropCourseTextArea;
    private javax.swing.JLabel studentIDLabel;
    private javax.swing.JTextField studentIDTextfield;
    private javax.swing.JTabbedPane studentTabs;
    // End of variables declaration//GEN-END:variables
}
